CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(LRU-Hash)

if(NOT CMAKE_BUILD_TYPE)
    SET(CMAKE_BUILD_TYPE "Release")
endif()

if(POLICY CMP0015)
    cmake_policy(SET CMP0015 NEW)
endif()
if(POLICY CMP0042)
    cmake_policy(SET CMP0042 NEW)
endif()
	 
SET(CMAKE_CXX_FLAGS_RELEASE "-Wall -O2 -std=c++0x")
SET(CMAKE_CXX_FLAGS_DEBUG   "-Wall -O0 -std=c++0x -g")
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)
SET(LIBRARY_OUTPUT_PATH    ${PROJECT_BINARY_DIR}/lib)

SET(FLUENT_INCLUDES  ${WITH_FLUENT}/src)
SET(FLUENT_LIBRARIES ${WITH_FLUENT}/lib)

INCLUDE_DIRECTORIES(${INC_DIR} ${FLUENT_INCLUDES} ./src)
LINK_DIRECTORIES(${LIB_DIR} ${FLUENT_LIBRARIES})
FILE(GLOB BASESRCS "src/*.cc" "src/*.hpp")
FILE(GLOB TESTSRCS "test/*.cc")

SET(CMAKE_INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/lib")

# Module code
ADD_LIBRARY(lruhash SHARED ${BASESRCS})
# TARGET_LINK_LIBRARIES(devourer fluent pcap ev)

# Test code
ADD_EXECUTABLE(lruhash-test ${TESTSRCS})
TARGET_LINK_LIBRARIES(lruhash-test lruhash)

